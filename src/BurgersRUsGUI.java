
import java.text.DecimalFormat;
import javax.swing.JOptionPane;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author capps
 */
public class BurgersRUsGUI extends javax.swing.JFrame {

    /**
     * Creates new form BurgersRUsGUI
     */
    //Class double refrences and attributes
    private double orderTotal;
    
    public BurgersRUsGUI() {
        initComponents();
        this.setLocationRelativeTo(null);
        orderTotal = 0.0;
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgBurgers = new javax.swing.ButtonGroup();
        lblYourOrder = new javax.swing.JLabel();
        lblItemPrice = new javax.swing.JLabel();
        lblQuantity = new javax.swing.JLabel();
        lblOrderTotal = new javax.swing.JLabel();
        rdoSingleBurger = new javax.swing.JRadioButton();
        rdoDoubleBurger = new javax.swing.JRadioButton();
        chkAddCheese = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaYourOrder = new javax.swing.JTextArea();
        chkAddBacon = new javax.swing.JCheckBox();
        chkMeal = new javax.swing.JCheckBox();
        txtQuantity = new javax.swing.JTextField();
        txtOrderTotal = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        txtItemPrice = new javax.swing.JTextField();
        jmbMainMenu = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        nmiExit = new javax.swing.JMenuItem();
        menuOrder = new javax.swing.JMenu();
        mniAddToOrder = new javax.swing.JMenuItem();
        mniClearForNextItem = new javax.swing.JMenuItem();
        mniNewOrder = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Burger Barn");
        setFocusable(false);

        lblYourOrder.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblYourOrder.setText("YOUR ORDER");

        lblItemPrice.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblItemPrice.setText("Item Price:");

        lblQuantity.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblQuantity.setText("Quantity:");

        lblOrderTotal.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblOrderTotal.setText("Order Total:");

        btgBurgers.add(rdoSingleBurger);
        rdoSingleBurger.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rdoSingleBurger.setText("Single Burger");
        rdoSingleBurger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoSingleBurgerActionPerformed(evt);
            }
        });

        btgBurgers.add(rdoDoubleBurger);
        rdoDoubleBurger.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rdoDoubleBurger.setText("Double Burger");
        rdoDoubleBurger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoDoubleBurgerActionPerformed(evt);
            }
        });

        chkAddCheese.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        chkAddCheese.setText("Add cheese");
        chkAddCheese.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAddCheeseActionPerformed(evt);
            }
        });

        txaYourOrder.setColumns(20);
        txaYourOrder.setRows(5);
        jScrollPane1.setViewportView(txaYourOrder);

        chkAddBacon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        chkAddBacon.setText("Add Bacon");
        chkAddBacon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAddBaconActionPerformed(evt);
            }
        });

        chkMeal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        chkMeal.setText("Make it a Meal");
        chkMeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMealActionPerformed(evt);
            }
        });

        txtQuantity.setText("1");

        txtOrderTotal.setEditable(false);
        txtOrderTotal.setBackground(new java.awt.Color(255, 255, 255));

        txtItemPrice.setEditable(false);
        txtItemPrice.setBackground(new java.awt.Color(255, 255, 255));
        txtItemPrice.setText("0");

        menuFile.setText("File");

        nmiExit.setText("Exit");
        nmiExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nmiExitActionPerformed(evt);
            }
        });
        menuFile.add(nmiExit);

        jmbMainMenu.add(menuFile);

        menuOrder.setText("Order");

        mniAddToOrder.setText("Add to Order");
        mniAddToOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAddToOrderActionPerformed(evt);
            }
        });
        menuOrder.add(mniAddToOrder);

        mniClearForNextItem.setText("Clear for next item");
        mniClearForNextItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniClearForNextItemActionPerformed(evt);
            }
        });
        menuOrder.add(mniClearForNextItem);

        mniNewOrder.setText("New Order");
        mniNewOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniNewOrderActionPerformed(evt);
            }
        });
        menuOrder.add(mniNewOrder);

        jmbMainMenu.add(menuOrder);

        setJMenuBar(jmbMainMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdoDoubleBurger, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkAddCheese, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(chkAddBacon, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rdoSingleBurger, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(chkMeal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(113, 113, 113)
                                .addComponent(lblYourOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblItemPrice)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblOrderTotal)
                            .addComponent(lblQuantity))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .addComponent(txtOrderTotal))))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rdoSingleBurger)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdoDoubleBurger)
                        .addGap(18, 18, 18)
                        .addComponent(chkAddCheese)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkAddBacon)
                        .addGap(18, 18, 18)
                        .addComponent(chkMeal)
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblItemPrice)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtItemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblYourOrder)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblQuantity)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblOrderTotal)
                            .addComponent(txtOrderTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nmiExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nmiExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_nmiExitActionPerformed

    private void mniAddToOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAddToOrderActionPerformed
        // TODO add your handling code here:
        
        //Build output line
        String outputLine = txtQuantity.getText();
        if(rdoSingleBurger.isSelected())
            outputLine += " single";
        else
            outputLine += " double";
        
        if(chkAddCheese.isSelected())
            outputLine += ", cheese";
        if(chkAddBacon.isSelected())
            outputLine += ", bacon";
        if(chkMeal.isSelected())
            outputLine += ", meal";
        outputLine += " at ";
        outputLine += txtItemPrice.getText();
        outputLine += " each\n";
        
        txaYourOrder.append(outputLine);
        
        //Update orderTotal
        int quantity = Integer.parseInt(txtQuantity.getText());
        double itemPrice = Double.parseDouble(txtItemPrice.getText());
        double linePrice = quantity * itemPrice;
        orderTotal  += linePrice;
        DecimalFormat fmt = new DecimalFormat("#,##0.00");
        txtOrderTotal.setText(fmt.format(orderTotal));
    }//GEN-LAST:event_mniAddToOrderActionPerformed

    private void mniClearForNextItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniClearForNextItemActionPerformed
        // TODO add your handling code here:
        clearForNextItem();
    }//GEN-LAST:event_mniClearForNextItemActionPerformed

    private void mniNewOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniNewOrderActionPerformed
        // TODO add your handling code here:
        clearForNextItem();
        txaYourOrder.setText("");
        txtOrderTotal.setText("");
        orderTotal = 0.0;
    }//GEN-LAST:event_mniNewOrderActionPerformed

    private void rdoSingleBurgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoSingleBurgerActionPerformed
        // TODO add your handling code here:
        updateItemPrice();
    }//GEN-LAST:event_rdoSingleBurgerActionPerformed

    private void rdoDoubleBurgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoDoubleBurgerActionPerformed
        // TODO add your handling code here:
        updateItemPrice();
    }//GEN-LAST:event_rdoDoubleBurgerActionPerformed

    private void chkAddCheeseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAddCheeseActionPerformed
        // TODO add your handling code here:
        updateItemPrice();
    }//GEN-LAST:event_chkAddCheeseActionPerformed

    private void chkAddBaconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAddBaconActionPerformed
        // TODO add your handling code here:
        updateItemPrice();
    }//GEN-LAST:event_chkAddBaconActionPerformed

    private void chkMealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMealActionPerformed
        // TODO add your handling code here:
        updateItemPrice();
    }//GEN-LAST:event_chkMealActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BurgersRUsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BurgersRUsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BurgersRUsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BurgersRUsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new BurgersRUsGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgBurgers;
    private javax.swing.JCheckBox chkAddBacon;
    private javax.swing.JCheckBox chkAddCheese;
    private javax.swing.JCheckBox chkMeal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JMenuBar jmbMainMenu;
    private javax.swing.JLabel lblItemPrice;
    private javax.swing.JLabel lblOrderTotal;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblYourOrder;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuOrder;
    private javax.swing.JMenuItem mniAddToOrder;
    private javax.swing.JMenuItem mniClearForNextItem;
    private javax.swing.JMenuItem mniNewOrder;
    private javax.swing.JMenuItem nmiExit;
    private javax.swing.JRadioButton rdoDoubleBurger;
    private javax.swing.JRadioButton rdoSingleBurger;
    private javax.swing.JTextArea txaYourOrder;
    private javax.swing.JTextField txtItemPrice;
    private javax.swing.JTextField txtOrderTotal;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables

    private void updateItemPrice() {
        double itemPrice = 0.0;
        //Get burger size from rdo buttons
        if(rdoSingleBurger.isSelected())
            itemPrice = 3.50;
        else if(rdoDoubleBurger.isSelected())
            itemPrice = 4.75;
        else{
            JOptionPane.showMessageDialog(this, "Burger type must be selected", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        //add charges
        if(chkAddCheese.isSelected())
            itemPrice += 0.50;
        if(chkAddBacon.isSelected())
            itemPrice += 1.25;
        if(chkMeal.isSelected())
            itemPrice += 4.00;
        
        //Show order
        DecimalFormat fmt = new DecimalFormat("#,##0.00");
        txtItemPrice.setText(fmt.format(itemPrice));
        
    }

    private void clearForNextItem() {
        btgBurgers.clearSelection();
        chkAddCheese.setSelected(false);
        chkAddBacon.setSelected(false);
        chkMeal.setSelected(false);
        txtItemPrice.setText("0");
        txtQuantity.setText("1");
    }
}
